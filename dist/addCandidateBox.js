"use strict";
class AddCandidateBox extends HTMLElement {
    constructor() {
        super();
        this.count = 1;
        const box = document.createElement('div');
        box.className = 'add-candidate-box';
        const input = this.createInput();
        const button = this.createButton();
        button.onclick = () => this.AddCandidate(input.value);
        box.appendChild(input);
        box.appendChild(button);
        box.appendChild(this.setupStyles());
        const shadow = this.attachShadow({ mode: 'open' });
        shadow.appendChild(box);
    }
    setupStyles() {
        const style = document.createElement('style');
        style.textContent = `
            .add-candidate-box {
            }

            .add-candidate-input {
                background-color: rgba(255, 255, 255, 0.6);
                border: 0px;
            }

            .add-candidate-button {
                background-color: #00ff5294;
                border: 0;
                padding: 0;
            }
        `;
        return style;
    }
    AddCandidate(candidateName) {
        if (candidateName === '') {
            candidateName = 'Candidato sem nome ' + this.count;
            this.count++;
        }
        document.dispatchEvent(new CustomEvent('candidateAdded', {
            cancelable: false,
            detail: {
                name: candidateName
            }
        }));
        this.log(candidateName);
    }
    createInput() {
        const input = document.createElement('input');
        input.className = 'add-candidate-input';
        input.placeholder = 'Nome do candidato';
        return input;
    }
    createButton() {
        const button = document.createElement('button');
        button.className = 'add-candidate-button';
        button.textContent = 'Adicionar';
        return button;
    }
    log(str) {
        document.dispatchEvent(new CustomEvent('logAdded', {
            cancelable: false,
            detail: {
                log: `candidateAdded: ${str}`
            }
        }));
    }
}
customElements.define('add-candidate-box', AddCandidateBox);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkQ2FuZGlkYXRlQm94LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2FkZENhbmRpZGF0ZUJveC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsTUFBTSxlQUFnQixTQUFRLFdBQVc7SUFHckM7UUFDSSxLQUFLLEVBQUUsQ0FBQztRQUhaLFVBQUssR0FBVyxDQUFDLENBQUM7UUFJZCxNQUFNLEdBQUcsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzFDLEdBQUcsQ0FBQyxTQUFTLEdBQUcsbUJBQW1CLENBQUM7UUFDcEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFBO1FBQ2hDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUVuQyxNQUFNLENBQUMsT0FBTyxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBRXJELEdBQUcsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdkIsR0FBRyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4QixHQUFHLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO1FBRXBDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztRQUNuRCxNQUFNLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCxXQUFXO1FBQ1AsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM5QyxLQUFLLENBQUMsV0FBVyxHQUFHOzs7Ozs7Ozs7Ozs7OztTQWNuQixDQUFDO1FBQ0YsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUVELFlBQVksQ0FBQyxhQUFxQjtRQUM5QixJQUFJLGFBQWEsS0FBSyxFQUFFLEVBQUUsQ0FBQztZQUN2QixhQUFhLEdBQUcscUJBQXFCLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNuRCxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDakIsQ0FBQztRQUNHLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxXQUFXLENBQUMsZ0JBQWdCLEVBQUU7WUFDekQsVUFBVSxFQUFFLEtBQUs7WUFDakIsTUFBTSxFQUFFO2dCQUNKLElBQUksRUFBRSxhQUFhO2FBQ3RCO1NBQ0osQ0FBQyxDQUFDLENBQUE7UUFDSCxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFBO0lBQzNCLENBQUM7SUFFRCxXQUFXO1FBQ1AsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM5QyxLQUFLLENBQUMsU0FBUyxHQUFHLHFCQUFxQixDQUFDO1FBQ3hDLEtBQUssQ0FBQyxXQUFXLEdBQUcsbUJBQW1CLENBQUM7UUFDeEMsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUVELFlBQVk7UUFDUixNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2hELE1BQU0sQ0FBQyxTQUFTLEdBQUcsc0JBQXNCLENBQUM7UUFDMUMsTUFBTSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDakMsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUVELEdBQUcsQ0FBQyxHQUFXO1FBQ1gsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxVQUFVLEVBQUU7WUFDL0MsVUFBVSxFQUFFLEtBQUs7WUFDakIsTUFBTSxFQUFFO2dCQUNKLEdBQUcsRUFBRSxtQkFBbUIsR0FBRyxFQUFFO2FBQ2hDO1NBQ0osQ0FBQyxDQUFDLENBQUE7SUFDUCxDQUFDO0NBQ0o7QUFFRCxjQUFjLENBQUMsTUFBTSxDQUFDLG1CQUFtQixFQUFFLGVBQWUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQWRkQ2FuZGlkYXRlQm94IGV4dGVuZHMgSFRNTEVsZW1lbnR7XG4gICAgY291bnQ6IG51bWJlciA9IDE7XG4gICAgXG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGJveC5jbGFzc05hbWUgPSAnYWRkLWNhbmRpZGF0ZS1ib3gnO1xuICAgICAgICBjb25zdCBpbnB1dCA9IHRoaXMuY3JlYXRlSW5wdXQoKVxuICAgICAgICBjb25zdCBidXR0b24gPSB0aGlzLmNyZWF0ZUJ1dHRvbigpO1xuICAgICAgICBcbiAgICAgICAgYnV0dG9uLm9uY2xpY2sgPSAoKSA9PiB0aGlzLkFkZENhbmRpZGF0ZShpbnB1dC52YWx1ZSlcblxuICAgICAgICBib3guYXBwZW5kQ2hpbGQoaW5wdXQpO1xuICAgICAgICBib3guYXBwZW5kQ2hpbGQoYnV0dG9uKTtcbiAgICAgICAgYm94LmFwcGVuZENoaWxkKHRoaXMuc2V0dXBTdHlsZXMoKSk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBzaGFkb3cgPSB0aGlzLmF0dGFjaFNoYWRvdyh7IG1vZGU6ICdvcGVuJyB9KTtcbiAgICAgICAgc2hhZG93LmFwcGVuZENoaWxkKGJveCk7XG4gICAgfVxuXG4gICAgc2V0dXBTdHlsZXMoKSB7XG4gICAgICAgIGNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgICAgICAgc3R5bGUudGV4dENvbnRlbnQgPSBgXG4gICAgICAgICAgICAuYWRkLWNhbmRpZGF0ZS1ib3gge1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuYWRkLWNhbmRpZGF0ZS1pbnB1dCB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMHB4O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuYWRkLWNhbmRpZGF0ZS1idXR0b24ge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGZmNTI5NDtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICAgICAgcmV0dXJuIHN0eWxlO1xuICAgIH1cblxuICAgIEFkZENhbmRpZGF0ZShjYW5kaWRhdGVOYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgaWYgKGNhbmRpZGF0ZU5hbWUgPT09ICcnKSB7XG4gICAgICAgICAgICBjYW5kaWRhdGVOYW1lID0gJ0NhbmRpZGF0byBzZW0gbm9tZSAnICsgdGhpcy5jb3VudDtcbiAgICAgICAgICAgIHRoaXMuY291bnQrKztcbiAgICAgICAgfVxuICAgICAgICAgICAgZG9jdW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ2NhbmRpZGF0ZUFkZGVkJywge1xuICAgICAgICAgICAgY2FuY2VsYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBkZXRhaWw6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBjYW5kaWRhdGVOYW1lXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKVxuICAgICAgICB0aGlzLmxvZyhjYW5kaWRhdGVOYW1lKVxuICAgIH1cblxuICAgIGNyZWF0ZUlucHV0KCk6IEhUTUxJbnB1dEVsZW1lbnR7XG4gICAgICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgaW5wdXQuY2xhc3NOYW1lID0gJ2FkZC1jYW5kaWRhdGUtaW5wdXQnO1xuICAgICAgICBpbnB1dC5wbGFjZWhvbGRlciA9ICdOb21lIGRvIGNhbmRpZGF0byc7XG4gICAgICAgIHJldHVybiBpbnB1dDtcbiAgICB9XG5cbiAgICBjcmVhdGVCdXR0b24oKTogSFRNTEJ1dHRvbkVsZW1lbnR7XG4gICAgICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICBidXR0b24uY2xhc3NOYW1lID0gJ2FkZC1jYW5kaWRhdGUtYnV0dG9uJztcbiAgICAgICAgYnV0dG9uLnRleHRDb250ZW50ID0gJ0FkaWNpb25hcic7XG4gICAgICAgIHJldHVybiBidXR0b247XG4gICAgfVxuXG4gICAgbG9nKHN0cjogc3RyaW5nKSB7XG4gICAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdsb2dBZGRlZCcsIHtcbiAgICAgICAgICAgIGNhbmNlbGFibGU6IGZhbHNlLFxuICAgICAgICAgICAgZGV0YWlsOiB7XG4gICAgICAgICAgICAgICAgbG9nOiBgY2FuZGlkYXRlQWRkZWQ6ICR7c3RyfWBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkpXG4gICAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ2FkZC1jYW5kaWRhdGUtYm94JywgQWRkQ2FuZGlkYXRlQm94KTsiXX0=